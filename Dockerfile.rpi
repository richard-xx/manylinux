FROM richardarducam/raspios_lite_armhf:stretch-20190408
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ='Asia/Shanghai'
USER root

ENV MANYLINUX_CPPFLAGS="-Wdate-time -D_FORTIFY_SOURCE=2"
ENV MANYLINUX_CFLAGS="-g -O2 -Wall -fdebug-prefix-map=/=. -fstack-protector-strong -Wformat -Werror=format-security"
ENV MANYLINUX_CXXFLAGS="-g -O2 -Wall -fdebug-prefix-map=/=. -fstack-protector-strong -Wformat -Werror=format-security"
ENV MANYLINUX_LDFLAGS="-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now"
ENV MACHINE=armv6

# 获取主机架构并赋值给 AUDITWHEEL_ARCH 环境变量
RUN export AUDITWHEEL_ARCH=$(uname -m) && \
    echo "AUDITWHEEL_ARCH is set to $AUDITWHEEL_ARCH"

ENV AUDITWHEEL_POLICY=manylinux_2_24
ENV AUDITWHEEL_PLAT=${AUDITWHEEL_POLICY}_${AUDITWHEEL_ARCH}

RUN ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && sed -i 's|http://raspbian.raspberrypi.org/raspbian/|http://legacy.raspbian.org/raspbian/|' /etc/apt/sources.list \
    && apt update -qq \
    && apt upgrade -y \
    && apt-get install --no-install-recommends -qq -y apt-utils dialog \
    && apt-get install --no-install-recommends -qq -y wget curl ca-certificates \
    sudo git g++ make build-essential zlib1g-dev apt-transport-https \
    libbz2-dev libreadline-dev libsqlite3-dev llvm libncursesw5-dev xz-utils tk-dev \
    libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev unzip ccache cmake python3-pip \
    && apt clean autoclean \
    && rm -rf /var/lib/{apt,cache,log} \
    && python3 -m pip install -U pip \
    && python3 -m pip install --prefer-binary cmake patchelf ninja
    
RUN apt-get remove -y libssl-dev \
    && git clone --branch OpenSSL_1_1_1-stable --recurse-submodules https://github.com/openssl/openssl.git --depth 1 \
    && cd openssl \
    && ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl CPPFLAGS="${MANYLINUX_CPPFLAGS}" CFLAGS="${MANYLINUX_CFLAGS} -fPIC" CXXFLAGS="${MANYLINUX_CXXFLAGS} -fPIC" LDFLAGS="${MANYLINUX_LDFLAGS} -fPIC -Wl,-rpath=/usr/local/ssl/lib -Wl,--enable-new-dtags" \
    && make \
    && make install_sw  -j \
    && cd ../ \
    && rm -rf openssl \
    && ldconfig

RUN git clone https://github.com/pyenv/pyenv.git --depth 1 \
    && cd pyenv/plugins/python-build \
    && bash ./install.sh
